#include "console.oat"`

class Piece <: Object{
	int team;
        int row;
        int col;

	new (int team)()
	{
		this.team = team;
}
	unit init(int r, int c){
          this.row = r;
          this.col = c;
          return;
	}
	
	unit draw(){
          int x = 1+this.col*6;
          int y = this.row*6;
          if(this.team==0){
            for(int i = 0; i<5; i=i+1;){
              con_move(x,y);
              con_print("     ");
              y=y+1;
            } 
          }
          if(this.team==1){
            for(int i = 0; i<5; i=i+1;){
              con_move(x,y);
              con_print("XXXXX");
              y=y+1;
            }
          }
          if(this.team==2){
            for(int i = 0; i<5; i=i+1;){
              con_move(x,y);
              con_print("OOOOO");
              y=y+1;
            }
          }
          return;
	}
	
};

class Board <: Object {
  Piece[][] pieces;
  
  new ()()
    this.pieces = new [6](fun i -> new [7](fun i -> new Piece(1)));
  {
  }
    

  unit init(){
    for (int r = 0; r<6; r=r+1;){
      for (int c = 0; c<7; c=c+1;){
        this.pieces[r][c].init(r,c);
      }
    }
    return;
  }
  unit draw(){
    int x = 0;
    int y = 0;
    con_move(x,y);
    for (int i=0; i<30;i=i+1;){
      	con_print("|\n");
    }
    /*Print pieces*/
    for (int r = 0; r<6; r=r+1;){
      for(int c = 0; c<7; c=c+1;){
        this.pieces[r][c].draw();
      }
    }
    return;
  }	
	
};

class Player <: Object{
	string name;
	int num;
	new (string name, int num)()
			this.name = name;
		{
		this.num = num;
		}

};
	
class State <: Object {
  Board board;
  Player player1;
  Player player2;
  int turn;

  new ()() 
  	this.player1 = new Player("player1", 1);
    this.player2 = new Player("player2", 2);
    this.board = new Board();
  {
    this.turn = 1;
   }
  
  unit update (int col) {
  int move = 0;
  int move2 = 0;
  
  if 			(col == 49){move = 1;}
  else if (col == 50){move = 2;}
  else if (col == 51){move = 3;}
  else if (col == 52){move = 4;}
  else if (col == 53){move = 5;}
  else if (col == 54){move = 6;}
  else if (col == 55){move = 7;}
  else 							 {move = 0;}
  
  	for (int i = 0; i < 6; i=i+1;) {
          if(this.board.pieces[move][i].team == 0) {
            move2 = this.board.pieces[move][i+1].team;
          }
        }
        this.board.pieces[move][move2].team = this.turn;
        if (this.turn == 1) { this.turn = this.turn + 1; }
       	else {this.turn = 1;}
        return;
  }
  
  bool checkWinner() {return true;}
  
  unit display() {
    con_clear();
    this.board.draw();
    con_refresh();
    return;
  }
};

unit instructions() {
  int k = 0;
  con_move(0,0);
  con_print("
    Connect4! \n
      Press the number over the column where you want to place your piece. \n
      Number keys - Place piece \n
      First to get 4 pieces in a row wins! \n
      Esc - quit \n\n
      [Press any key to play!]\n");
    k = con_getch();
  return;
}

unit lose() {
  return;
}

int program(int argc, string[] argv) {
  int minx = 80;
  int miny = 80;
  int input = 0;
  State s = new State();
  s.board.init();
  con_init();
  con_move(0,0);
  instructions();
  con_clear();
  while ((input != 27)) {
  	s.display();
  	input = con_getch();
  	s.update(input);
  }
  con_cleanup();
  return 0;
}